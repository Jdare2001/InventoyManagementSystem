@page "/Inventory"
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject InventoryService InventoryService

<PageTitle>Inventory</PageTitle>

<h1>Inventory</h1>
@inject IMDatabaseContext DbContext

<h3>Items</h3>
<button class="btn btn-primary" @onclick="NavigateToAddItem">Add a New Item</button>
@if (InventoryItems != null &&   InventoryItems.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in InventoryItems)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Description</td>
                    <td>@item.Quantity</td>
                    <td>
                        <button class="btn btn-primary">Update Item</button>
                    </td>
                    <td>
                    <button class="btn btn-danger" @onclick="() => DeleteItem(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No items found.</p>
}

@code {
    private List<Item> InventoryItems = new List<Item>{};

    protected override async Task OnInitializedAsync()
    {
        InventoryItems = await InventoryService.GetInventoryItemsAsync();
    }

    private async Task DeleteItem(int itemId)
    {
        await InventoryService.DeleteItemAsync(itemId);
        InventoryItems = await InventoryService.GetInventoryItemsAsync(); // Refresh the list
    }
    private void NavigateToAddItem(){

        Navigation.NavigateTo("/AddItem");
    }

}